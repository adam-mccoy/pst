root = true

[*]
charset                  = utf-8
end_of_line              = crlf
indent_style             = space
indent_size              = 4
insert_final_newline     = true
trim_trailing_whitespace = true

# Solution Files
[*.sln]
indent_style = tab

# XML Project Files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML Configuration Files
[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

[*.cs]
dotnet_style_qualification_for_field                                         = false : warning
dotnet_style_qualification_for_property                                      = false : warning
dotnet_style_qualification_for_method                                        = false : warning
dotnet_style_qualification_for_event                                         = false : warning
dotnet_style_predefined_type_for_locals_parameters_members                   = true : warning
dotnet_style_predefined_type_for_member_access                               = true : warning
csharp_preferred_modifier_order                                              = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async
dotnet_style_readonly_field                                                  = true : warning
dotnet_style_object_initializer                                              = true : warning
dotnet_style_collection_initializer                                          = true : warning
dotnet_style_explicit_tuple_names                                            = true : warning
dotnet_style_prefer_inferred_tuple_names                                     = true : warning
dotnet_style_prefer_inferred_anonymous_type_member_names                     = true : warning
dotnet_style_prefer_auto_properties                                          = true : warning
dotnet_style_prefer_is_null_check_over_reference_equality_method             = true : warning
dotnet_style_coalesce_expression                                             = true : warning
dotnet_style_null_propagation                                                = true : warning
dotnet_style_prefer_conditional_expression_over_return                       = false
dotnet_style_prefer_conditional_expression_over_assignment                   = false

csharp_style_var_for_built_in_types                                          = true : warning
csharp_style_var_when_type_is_apparent                                       = true : warning
csharp_style_var_elsewhere                                                   = true : warning
csharp_style_expression_bodied_methods                                       = true : warning
csharp_style_expression_bodied_constructors                                  = false : warning
csharp_style_expression_bodied_operators                                     = true : warning
csharp_style_expression_bodied_properties                                    = true : warning
csharp_style_expression_bodied_indexers                                      = true : warning
csharp_style_expression_bodied_accessors                                     = true : warning
csharp_style_pattern_matching_over_is_with_cast_check                        = true : warning
csharp_style_pattern_matching_over_as_with_null_check                        = true : warning
csharp_style_inlined_variable_declaration                                    = true : warning
csharp_prefer_simple_default_expression                                      = true : warning
csharp_style_deconstructed_variable_declaration                              = true : warning
csharp_style_pattern_local_over_anonymous_function                           = true : warning
csharp_style_throw_expression                                                = true : warning
csharp_style_conditional_delegate_call                                       = true : warning
csharp_prefer_braces                                                         = false : warning

dotnet_sort_system_directives_first                                          = true : warning
csharp_new_line_before_open_brace                                            = all
csharp_new_line_before_else                                                  = true : warning
csharp_new_line_before_catch                                                 = true : warning
csharp_new_line_before_finally                                               = true : warning
csharp_new_line_before_members_in_object_initializers                        = true : warning
csharp_new_line_before_members_in_anonymous_types                            = true : warning
csharp_new_line_between_query_expression_clauses                             = true : warning
csharp_indent_case_contents                                                  = true : warning
csharp_indent_switch_labels                                                  = true : warning
csharp_indent_labels                                                         = no_change : warning
csharp_space_after_cast                                                      = false : warning
csharp_space_after_keywords_in_control_flow_statements                       = true : warning
csharp_space_between_method_declaration_parameter_list_parentheses           = false : warning
csharp_space_between_method_call_parameter_list_parentheses                  = false : warning
csharp_space_between_parentheses                                             = expressions : warning
csharp_space_before_colon_in_inheritance_clause                              = true : warning
csharp_space_after_colon_in_inheritance_clause                               = true : warning
csharp_space_around_binary_operators                                         = before_and_after : warning
csharp_space_between_method_declaration_empty_parameter_list_parentheses     = false : warning
csharp_space_between_method_call_name_and_opening_parenthesis                = false : warning
csharp_space_between_method_call_empty_parameter_list_parentheses            = false : warning
csharp_preserve_single_line_statements                                       = false : warning
csharp_preserve_single_line_blocks                                           = true : warning
csharp_indent_block_contents                                                 = true : warning
csharp_indent_braces                                                         = false : warning
csharp_space_after_comma                                                     = true : warning
csharp_space_after_dot                                                       = false : warning
csharp_space_after_semicolon_in_for_statement                                = true : warning
csharp_space_around_declaration_statements                                   = do_not_ignore : warning
csharp_space_before_comma                                                    = false : warning
csharp_space_before_dot                                                      = false : warning
csharp_space_before_semicolon_in_for_statement                               = false : warning
csharp_space_before_open_square_brackets                                     = false : warning
csharp_space_between_empty_square_brackets                                   = false : warning
csharp_space_between_method_declaration_name_and_open_parenthesis            = false : warning
csharp_space_between_square_brackets                                         = false : warning

## Naming Symbols ##

# Constant fields
dotnet_naming_symbols.const_fields.applicable_kinds                          = field
dotnet_naming_symbols.const_fields.required_modifiers                        = const

# Non-private readonly fields
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, internal, protected
dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds           = field
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers         = readonly

# Static readonly fields
dotnet_naming_symbols.static_readonly_fields.applicable_kinds                = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers              = static, readonly

# Private readonly fields
dotnet_naming_symbols.private_readonly_fields.applicable_accessibilities     = private
dotnet_naming_symbols.private_readonly_fields.applicable_kinds               = field
dotnet_naming_symbols.private_readonly_fields.required_modifiers             = readonly

# Public or internal fields
dotnet_naming_symbols.public_internal_fields.applicable_accessibilities      = public, internal
dotnet_naming_symbols.public_internal_fields.applicable_kinds                = field

# Private or protected fields
dotnet_naming_symbols.private_protected_fields.applicable_accessibilities    = private, protected
dotnet_naming_symbols.private_protected_fields.applicable_kinds              = field

# Public(ish) symbols
dotnet_naming_symbols.public_symbols.applicable_accessibilities              = public, internal, protected, protected_internal
dotnet_naming_symbols.public_symbols.applicable_kinds                        = method, property, event, delegate

# Parameters
dotnet_naming_symbols.parameters.applicable_kinds                            = parameter

# Non-interface types
dotnet_naming_symbols.non_interface_types.applicable_kinds                   = class, struct, enum, delegate

# Interface types
dotnet_naming_symbols.interface_types.applicable_kinds                       = interface

## Naming Styles ##

# Camel-case
dotnet_naming_style.camel_case.capitalization                                = camel_case

# Camel-case with underscore prefix
dotnet_naming_style.camel_case_with_underscore_prefix.capitalization         = camel_case
dotnet_naming_style.camel_case_with_underscore_prefix.required_prefix        = _

# Pascal-case
dotnet_naming_style.pascal_case.capitalization                               = pascal_case

# First word upper-case
dotnet_naming_style.first_word_upper.capitalization                          = first_word_upper

# Pascal-case with 'I' prefix
dotnet_naming_style.pascal_case_with_i_prefix.capitalization                 = pascal_case
dotnet_naming_style.pascal_case_with_i_prefix.required_prefix                = I

## Naming Rules ##

# Constant fields must be pascal-case
dotnet_naming_rule.constant_fields_must_be_pascal_case.severity              = warning
dotnet_naming_rule.constant_fields_must_be_pascal_case.symbols               = const_fields
dotnet_naming_rule.constant_fields_must_be_pascal_case.style                 = pascal_case

# Public, internal and protected readonly fields must be pascal-case
dotnet_naming_rule.non_private_readonly_fields_must_be_pascal_case.severity  = warning
dotnet_naming_rule.non_private_readonly_fields_must_be_pascal_case.symbols   = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_must_be_pascal_case.style     = pascal_case

# Static readonly fields must be pascal-case
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.severity       = warning
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.symbols        = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.style          = pascal_case

# Private readonly fields must be camel-case with underscore prefix
dotnet_naming_rule.private_readonly_fields_must_be_camel_case.severity       = warning
dotnet_naming_rule.private_readonly_fields_must_be_camel_case.symbols        = private_readonly_fields
dotnet_naming_rule.private_readonly_fields_must_be_camel_case.style          = camel_case_with_underscore_prefix

# Public and internal fields must be pascal case
dotnet_naming_rule.public_internal_fields_must_be_pascal_case.severity       = warning
dotnet_naming_rule.public_internal_fields_must_be_pascal_case.symbols        = public_internal_fields
dotnet_naming_rule.public_internal_fields_must_be_pascal_case.style          = pascal_case

# Private and protected fields must be camel-case with underscore prefix
dotnet_naming_rule.private_protected_fields_must_be_camel_case.severity      = warning
dotnet_naming_rule.private_protected_fields_must_be_camel_case.symbols       = private_protected_fields
dotnet_naming_rule.private_protected_fields_must_be_camel_case.style         = camel_case_with_underscore_prefix

# Public members must be capitalized
dotnet_naming_rule.public_members_must_be_capitalized.severity               = warning
dotnet_naming_rule.public_members_must_be_capitalized.symbols                = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style                  = first_word_upper

# Parameters must be camel-case
dotnet_naming_rule.parameters_must_be_camel_case.severity                    = warning
dotnet_naming_rule.parameters_must_be_camel_case.symbols                     = parameters
dotnet_naming_rule.parameters_must_be_camel_case.style                       = camel_case

# Class, struct, enum and delegates must be pascal-case
dotnet_naming_rule.non_interface_types_must_be_pascal_case.severity          = warning
dotnet_naming_rule.non_interface_types_must_be_pascal_case.symbols           = non_interface_types
dotnet_naming_rule.non_interface_types_must_be_pascal_case.style             = pascal_case

# Interfaces must be pascal-case with 'I' prefix
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.severity          = warning
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.symbols           = interface_types
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.style             = prefix_interface_interface_with_i
